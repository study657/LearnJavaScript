// // Многомерные массивы в JavaScript
// // Задача №1
// // Дан следующий массив:

// // let arr = [
// // 	['a', 'b', 'c'],
// // 	['d', 'e', 'f'],
// // 	['g', 'h', 'i'],
// // 	['j', 'k', 'l'],
// // ];
// // Выведите с его помощью элементы с текстом 'l', 'e', 'g' и 'a'.

// let arr = [
// 	['a', 'b', 'c'],
// 	['d', 'e', 'f'],
// 	['g', 'h', 'i'],
// 	['j', 'k', 'l'],
// ];

// console.log(arr[3][2] + ', ' + arr[1][1] + ', ' + arr[2][0] + ' и ' + arr[0][0]);




// // Задача №2
// // Дан следующий массив:
// // let arr = [[1, 2], [3, 4], [5, 6]];
// // Найдите сумму всех его элементов.

// let arr = [[1, 2], [3, 4], [5, 6]];
// console.log(arr[0][0] + arr[0][1] + arr[1][0] + arr[1][1] + arr[2][0] + arr[2][1]);




// // Трехмерный массив
// // Задача №3
// // Дан следующий массив:

// // let arr = [
// // 	[
// // 		[1, 2],
// // 		[3, 4],
// // 	],
// // 	[
// // 		[5, 6],
// // 		[7, 8],
// // 	],
// // ];
// // Найдите сумму всех элементов приведенного массива.

// let arr = [
// 	[
// 		[1, 2],
// 		[3, 4],
// 	],
// 	[
// 		[5, 6],
// 		[7, 8],
// 	],
// ];

// console.log(arr[0][0][0] + arr[0][0][1] + arr[0][1][0] + arr[0][1][1] + arr[1][0][0] + arr[1][0][1] + arr[1][1][0] + arr[1][1][1]);




// // Произвольные массивы
// // Задача №4
// // Дан следующий массив:
// // let arr = [[1, 2, 3, [4, 5, [6, 7]]], [8, [9, 10]]];
// // Найдите сумму всех элементов приведенного массива.

// let arr = [
//     [
//         1, 2, 3, [4, 5, [6, 7]]
//     ],
//     [
//         8, [9, 10]
//     ]
// ];

// console.log(arr[0][0] + arr[0][1] + arr[0][2] + arr[0][3][0] + arr[0][3][1] + arr[0][3][2][0] + arr[0][3][2][1] + arr[1][0] + arr[1][1][0] + arr[1][1][1]);














// // Перебор многомерных массивов в JavaScript
// // Задача №1
// // Дан двухмерный массив с числами:
// // let arr = [[1, 2, 3], [4, 5], [6]];
// // С помощью вложенных циклов найдите сумму элементов этого массива.

// // // ПЕРВЫЙ СПОСОБ
// // let arr = [[1, 2, 3], [4, 5], [6]];

// // for(let i = 0; i < arr.length; i++){
// //     for(let j = 0; j < arr[i].length; j++){
// //         console.log(arr[i][j]);
// //     }
// // }


// // ВТОРОЙ СПОСОБ
// let arr = [[1, 2, 3], [4, 5], [6]];

// for(let subArr of arr){
//     for(let elem of subArr){
//         console.log(elem);
//     }
// }




// // Задача №2
// // Дан трехмерный массив с числами:
// // let arr = [[[1, 2], [3, 4]], [[5, 6], [7, 8]]];
// // С помощью вложенных циклов найдите сумму элементов этого массива.

// // // ПЕРВЫЙ СПОСОБ
// // let arr = [
// //     [
// //         [1, 2], [3, 4]
// //     ], 
// //     [
// //         [5, 6], [7, 8]
// //     ]
// // ];

// // for(let i = 0; i < arr.length; i++){
// //     for(let j = 0; j < arr[i].length; j++){
// //         for(let k = 0; k < arr[i][j].length; k++){
// //             console.log(arr[i][j][k]);
// //         }
// //     }
// // }


// // ВТОРОЙ СПОСОБ
// let arr = [
//     [
//         [1, 2], [3, 4]
//     ], 
//     [
//         [5, 6], [7, 8]
//     ]
// ];

// for(let subSubArr of arr){
//     for(let subArr of subSubArr){
//         for(let elem of subArr){
//             console.log(elem);
//         }
//     }
// }














// // Заполнение многомерных массивов JavaScript
// // Задача №1
// // Сформируйте с помощью двух вложенных циклов следующий массив:
// // [[1, 2, 3, 4, 5], [1, 2, 3, 4, 5], [1, 2, 3, 4, 5]]

// let arr = [];

// for(let i = 0; i < 3; i++){
//     arr.push([]);
//     for(let j = 0; j < 5; j++){
//         arr[i].push(j + 1);
//     }
// }
// console.log(arr);




// // Задача №2
// // Сформируйте с помощью двух вложенных циклов следующий массив:
// // [['x', 'x', 'x', 'x'], ['x', 'x', 'x', 'x'], ['x', 'x', 'x', 'x']]

// let arr = [];

// for(let i = 0; i < 3; i++){
//     arr.push([]);
//     for(let j = 0; j < 4; j++){
//         let str = 'x';
//         arr[i].push(str);
//     }
// }
// console.log(arr);




// // // Задача №3
// // // Сформируйте с помощью трех вложенных циклов следующий массив:

// // // [
// // // 	[
// // // 		[1, 2, 3, 4, 5],
// // // 		[1, 2, 3, 4, 5],
// // // 	],
// // // 	[
// // // 		[1, 2, 3, 4, 5],
// // // 		[1, 2, 3, 4, 5],
// // // 	],
// // // 	[
// // // 		[1, 2, 3, 4, 5],
// // // 		[1, 2, 3, 4, 5],
// // // 	],
// // // ]

// // let arr = [];

// // for(let i = 0; i < 3; i++){
// //     arr.push([]);
// //     for(let j = 0; j < 2; j++){
// //         arr[i].push([]);
// //         for(let k = 1; k <= 5; k++){
// //             arr[i][j].push(k);
// //         }
// //     }
// // }
// // console.log(arr);

// let arr = [];

// for (let i = 0; i < 3; i++) {
//     arr.push([]);
// 	for (let j = 1; j <= 5; j++) {
// 		arr[i].push(j);
// 	}
// }

// console.log(arr);




// // Заполнение числами по порядку
// // Задача №4
// // Сформируйте с помощью двух вложенных циклов следующий массив:
// // [[1, 2], [3, 4], [5, 6], [7, 8]]

// // // ПЕРВЫЙ СПОСОБ
// // let arr = [];
// // let k   = 1;

// // for(let i = 0; i < 4; i++){
// //     arr.push([]);
// //     for(let j = 0; j < 2; j++){
// //         arr[i].push(k);
// //         k++;
// //     }
// // }
// // console.log(arr);


// // // ВТОРОЙ СПОСОБ
// // let arr = [];

// // for(let i = 0, k = 1; i < 4; i++){
// //     arr.push([]);
// //     for(let j = 0; j < 2; j++){
// //         arr[i].push(k++);
// //     }
// // }
// // console.log(arr);


// // ТРЕТИЙ СПОСОБ
// let arr = [];

// for(let i = 0, k = 1; i < 4; i++){
//     arr.push([]);
//     for(let j = 0; j < 2; j++, k++){
//         arr[i].push(k);
//     }
// }
// console.log(arr);




// // // Задача №5
// // // Сформируйте с помощью двух вложенных циклов следующий массив:
// // // [[2, 4, 6], [8, 10, 12], [14, 16, 18], [20, 22, 24]]

// // // ПЕРВЫЙ СПОСОБ
// // let arr = [];
// // let k   = 0;

// // for(let i = 0; i < 4; i++){
// //     arr.push([]);
// //     for(let j = 1; j <= 3; j++){
// //         arr[i].push(k += 2);
// //     }
// // }
// // console.log(arr);


// // // ВТОРОЙ СПОСОБ
// // let arr = [];

// // for(let i = 0, k = 0; i < 4; i++){
// //     arr.push([]);
// //     for(let j = 1; j <= 3; j++){
// //         arr[i].push(k += 2);
// //     }
// // }
// // console.log(arr);


// // ТРЕТИЙ СПОСОБ
// let arr = [];

// for(let i = 0, k = 0; i < 4; i++){
//     arr.push([]);
//     for(let j = 1; j <= 3; j++, k += 2){
//         arr[i].push(k);
//     }
// }
// console.log(arr);




// // Задача №6
// // Сформируйте с помощью трех вложенных циклов следующий трехмерный массив:
// // [[[1, 2], [3, 4]], [[5, 6], [7, 8]]]

// // // ПЕРВЫЙ СПОСОБ
// // let arr = [];
// // let m   = 1;

// // for(let i = 0; i < 2; i++){
// //     arr.push([]);
// //     for(let j = 0; j < 2; j++){
// //         arr[i].push([]);
// //         for(let k = 0; k < 2; k++){
// //             arr[i][j].push(m);
// //             m++;
// //         }
// //     }
// // }
// // console.log(arr);


// // // ВТОРОЙ СПОСОБ
// // let arr = [];

// // for(let i = 0, m = 1; i < 2; i++){
// //     arr.push([]);
// //     for(let j = 0; j < 2; j++){
// //         arr[i].push([]);
// //         for(let k = 0; k < 2; k++){
// //             arr[i][j].push(m++);
// //         }
// //     }
// // }
// // console.log(arr);


// // ТРЕТИЙ СПОСОБ
// let arr = [];

// for(let i = 0, m = 1; i < 2; i++){
//     arr.push([]);
//     for(let j = 0; j < 2; j++){
//         arr[i].push([]);
//         for(let k = 0; k < 2; k++, m++){
//             arr[i][j].push(m);
//         }
//     }
// }
// console.log(arr);














// // Многомерные объекты в JavaScript
// // Задача №1
// // Дан следующий объект:
// // let obj = {
// // 	key1: {
// // 		key1: 1,
// // 		key2: 2,
// // 		key3: 3,
// // 	},
// // 	key2: {
// // 		key1: 4,
// // 		key2: 5,
// // 		key3: 6,
// // 	},
// // 	key3: {
// // 		key1: 7,
// // 		key2: 8,
// // 		key3: 9,
// // 	},
// // }
// // Найдите сумму элементов приведенного объекта.

// let obj = {
// 	key1: {
// 		key1: 1,
// 		key2: 2,
// 		key3: 3,
// 	},
// 	key2: {
// 		key1: 4,
// 		key2: 5,
// 		key3: 6,
// 	},
// 	key3: {
// 		key1: 7,
// 		key2: 8,
// 		key3: 9,
// 	},
// }
// console.log(obj['key1']['key1'] + obj['key1']['key2'] + obj['key1']['key3'] + obj['key2']['key1'] + obj['key2']['key2'] + obj['key2']['key3'] + obj['key3']['key1'] + obj['key3']['key2'] + obj['key3']['key3']);




// // Задача №2
// // Дан следующий объект:
// // let obj = {
// // 	1: {
// // 		1: 'a1',
// // 		2: 'a2',
// // 		3: 'a3',
// // 	},
// // 	2: {
// // 		1: 'b1',
// // 		2: 'b2',
// // 		3: 'b3',
// // 	},
// // 	3: {
// // 		1: 'c1',
// // 		2: 'c2',
// // 		3: 'c3',
// // 	},
// // }
// // Выведите на экран элемент 'b2' и элемент 'c1'.

// let obj = {
// 	1: {
// 		1: 'a1',
// 		2: 'a2',
// 		3: 'a3',
// 	},
// 	2: {
// 		1: 'b1',
// 		2: 'b2',
// 		3: 'b3',
// 	},
// 	3: {
// 		1: 'c1',
// 		2: 'c2',
// 		3: 'c3',
// 	},
// }
// console.log(obj['2']['2']);
// console.log(obj['3']['1']);




// // Задача №3
// // Дан следующий объект:
// // let obj = {
// // 	key1: {
// // 		a: 1, b: 2, c: {
// // 			d: 3,
// // 			e: 4,
// // 		}, f: 5,
// // 	},
// // 	key2: {
// // 		g: 6, h: 7,
// // 	},
// // }
// // Найдите сумму всех элементов-чисел.

// let obj = {
// 	key1: {
// 		a: 1, b: 2, c: {
// 			d: 3,
// 			e: 4,
// 		}, f: 5,
// 	},
// 	key2: {
// 		g: 6, h: 7,
// 	},
// }

// console.log(obj['key1']['a'] + obj['key1']['b'] + obj['key1']['c']['d'] + obj['key1']['c']['e'] + obj['key1']['f'] + obj['key2']['g'] + obj['key2']['h']);














// // Перебор многомерных объектов в JavaScript
// // Задача №1
// // Дан следующий объект:
// // let obj = {
// // 	1: {
// // 		1: 11,
// // 		2: 12,
// // 		3: 13,
// // 	},
// // 	2: {
// // 		1: 21,
// // 		2: 22,
// // 		3: 23,
// // 	},
// // 	3: {
// // 		1: 24,
// // 		2: 25,
// // 		3: 26,
// // 	},
// // }
// // Используя циклы, найдите сумму элементов этого объекта.

// let obj = {
// 	1: {
// 		1: 11,
// 		2: 12,
// 		3: 13,
// 	},
// 	2: {
// 		1: 21,
// 		2: 22,
// 		3: 23,
// 	},
// 	3: {
// 		1: 24,
// 		2: 25,
// 		3: 26,
// 	},
// }
// let result = 0;

// for(let key in obj){
//     let subValues  = obj[key];

//     for(let subObj in subValues){
//         result += subValues[subObj];
//     }
// }
// console.log(result);




// // Задача №2
// // Дан следующий объект:
// // let obj = {
// // 	'a': {
// // 		1: 1,
// // 		2: 2,
// // 		3: 3
// // 	},
// // 	'b': {
// // 		1: 4,
// // 		2: 5,
// // 		3: 6
// // 	},
// // 	'c': {
// // 		1: 7,
// // 		2: 8,
// // 		3: 9
// //     },
// //  'd': {
// // 		1: 10,
// // 		2: 11,
// // 		3: 12
// //     },
// //  'e': {
// //       1: 13,
// //       2: 14
// // 	   }
// // }
// // Используя циклы, найдите сумму элементов этого объекта.

// let obj = {
// 	'a': {
// 		1: 1,
// 		2: 2,
// 		3: 3
// 	},
// 	'b': {
// 		1: 4,
// 		2: 5,
// 		3: 6
// 	},
// 	'c': {
// 		1: 7,
// 		2: 8,
// 		3: 9
//     },
//     'd': {
// 		1: 10,
// 		2: 11,
// 		3: 12
//     },
//     'e': {
//         1: 13,
//         2: 14
// 	}
// }
// let result = 0;

// for(let key in obj){
//     let subKey  = obj[key];

//     for(let elem in subKey){
//         result += subKey[elem];
//     }
// }
// console.log(result);














// // Ключи из переменных в многомерных структурах JavaScript
// // Задача №1
// // Дан следующий объект с названиями месяцев:
// // let months = {
// // 	'ru': [
// // 		'январь',
// // 		'февраль',
// // 		'март',
// // 		'апрель',
// // 		'май',
// // 		'июнь',
// // 		'июль',
// // 		'август',
// // 		'сентябрь',
// // 		'октябрь',
// // 		'ноябрь',
// // 		'декабрь',
// // 	],
// // 	'en': [
// // 		'january',
// // 		'february',
// // 		'march',
// // 		'april',
// // 		'may',
// // 		'june',
// // 		'july',
// // 		'august',
// // 		'september',
// // 		'october',
// // 		'november',
// // 		'december',
// // 	],
// // };
// // Даны также следующие переменные:
// // let lang = 'ru'; // может быть или 'ru' или 'en'
// // let month = 5; // число от 0 до 12
// // Выведите на экран название месяца, соответствующее значениям переменных lang и month.

// let months = {
// 	'ru': [
// 		'январь',
// 		'февраль',
// 		'март',
// 		'апрель',
// 		'май',
// 		'июнь',
// 		'июль',
// 		'август',
// 		'сентябрь',
// 		'октябрь',
// 		'ноябрь',
// 		'декабрь',
// 	],
// 	'en': [
// 		'january',
// 		'february',
// 		'march',
// 		'april',
// 		'may',
// 		'june',
// 		'july',
// 		'august',
// 		'september',
// 		'october',
// 		'november',
// 		'december',
// 	],
// };
// let lang = 'ru';
// let month = 5;

// document.write(months[lang][month]);




// // Задача №2
// // Дана вот такая структура для хранения списка дел за года, месяцы и дни:
// // let affairs = {
// // 	'2018': {
// // 		11: {
// // 			29: ['дело111', 'дело112', 'дело113'],
// // 			30: ['дело121', 'дело122', 'дело123'],
// // 		},
// // 		12: {
// // 			30: ['дело211', 'дело212', 'дело213'],
// // 			31: ['дело221', 'дело222', 'дело223'],
// // 		},
// // 	},
// // 	'2019': {
// // 		12: {
// // 			29: ['дело311', 'дело312', 'дело313'],
// // 			30: ['дело321', 'дело322', 'дело323'],
// // 			31: ['дело331', 'дело332', 'дело333'],
// // 		}
// // 	},
// // }
// // Пусть даны также 3 переменные, содержащие год, месяц и день. Выведите дело, соответствующее значениям переменных.

// let affairs = {
// 	'2018': {
// 		11: {
// 			29: ['дело111', 'дело112', 'дело113'],
// 			30: ['дело121', 'дело122', 'дело123'],
// 		},
// 		12: {
// 			30: ['дело211', 'дело212', 'дело213'],
// 			31: ['дело221', 'дело222', 'дело223'],
// 		},
// 	},
// 	'2019': {
// 		12: {
// 			29: ['дело311', 'дело312', 'дело313'],
// 			30: ['дело321', 'дело322', 'дело323'],
// 			31: ['дело331', 'дело332', 'дело333'],
// 		}
// 	},
// }
// let year    = '2018';
// let month   = 11;
// let day     = 30;

// document.write(affairs[year][month][day]);














// // Многомерные массивы и объекты в JavaScript
// // Задача №1
// // Дан следующий массив работников:

// // let employees = [
// // 	{
// // 		name: 'name1',
// // 		salary: 300,
// // 	},
// // 	{
// // 		name: 'name2',
// // 		salary: 400,
// // 	},
// // 	{
// // 		name: 'name3',
// // 		salary: 500,
// // 	},
// // ];
// // Выведите на экран сумму зарплат первого и второго работников.

// let employees = [
// 	{
// 		name: 'name1',
// 		salary: 300,
// 	},
// 	{
// 		name: 'name2',
// 		salary: 400,
// 	},
// 	{
// 		name: 'name3',
// 		salary: 500,
// 	},
// ];
// document.write(employees[0]['salary'] + employees[1]['salary']);




// // Задача №2
// // Дан следующий массив студентов:
// // let students = {
// // 	'boys':  ['Коля', 'Вася', 'Петя'],
// // 	'girls': ['Даша', 'Маша', 'Лена'],
// // };
// // Выведите на экран элемент 'Вася' и элемент 'Лена'.

// let students = {
// 	'boys':  ['Коля', 'Вася', 'Петя'],
// 	'girls': ['Даша', 'Маша', 'Лена'],
// };
// document.write(students['boys'][1] + '<br>');
// document.write(students['girls'][2]);














// // Перебор многомерных комбинаций в JavaScript
// // Задача №1
// // Дан следующий массив работников:

// // let employees = [
// // 	{
// // 		name: 'name1',
// // 		salary: 300,
// // 	},
// // 	{
// // 		name: 'name2',
// // 		salary: 400,
// // 	},
// // 	{
// // 		name: 'name3',
// // 		salary: 500,
// // 	},
// // ];
// // Выведите на экран данные каждого работника в формате имя - зарплата.

// let employees = [
// 	{
// 		name: 'name1',
// 		salary: 300,
// 	},
// 	{
// 		name: 'name2',
// 		salary: 400,
// 	},
// 	{
// 		name: 'name3',
// 		salary: 500,
// 	},
// ];

// for(let elem of employees){
//     console.log(elem['name'] + ' - ' + elem['salary'] + ' рублей');
// }




// // Задача №2
// // Дан следующий массив работников:

// // let employees = [
// // 	{
// // 		name: 'name1',
// // 		salary: 300,
// // 	},
// // 	{
// // 		name: 'name2',
// // 		salary: 400,
// // 	},
// // 	{
// // 		name: 'name3',
// // 		salary: 500,
// // 	},
// // ];
// // Выведите на экран сумму зарплат всех работников.

// let employees = [
// 	{
// 		name: 'name1',
// 		salary: 300,
// 	},
// 	{
// 		name: 'name2',
// 		salary: 400,
// 	},
// 	{
// 		name: 'name3',
// 		salary: 500,
// 	},
// ];
// let sum     = 0;

// for(let elem of employees){
//     sum += elem['salary'];
// }
// console.log(sum);




// // Задача №3
// // Дан следующий массив работников:

// // let employees = [
// // 	{
// // 		name: 'name1',
// // 		salary: 300,
// // 		age: 28,
// // 	},
// // 	{
// // 		name: 'name2',
// // 		salary: 400,
// // 		age: 29,
// // 	},
// // 	{
// // 		name: 'name3',
// // 		salary: 500,
// // 		age: 30,
// // 	},
// // 	{
// // 		name: 'name4',
// // 		salary: 600,
// // 		age: 31,
// // 	},
// // 	{
// // 		name: 'name5',
// // 		salary: 700,
// // 		age: 32,
// // 	},
// // ];
// // Выведите на экран сумму зарплат тех работников, возраст которых равен или более 30 лет.

// let employees = [
// 	{
// 		name: 'name1',
// 		salary: 300,
// 		age: 28,
// 	},
// 	{
// 		name: 'name2',
// 		salary: 400,
// 		age: 29,
// 	},
// 	{
// 		name: 'name3',
// 		salary: 500,
// 		age: 30,
// 	},
// 	{
// 		name: 'name4',
// 		salary: 600,
// 		age: 31,
// 	},
// 	{
// 		name: 'name5',
// 		salary: 700,
// 		age: 32,
// 	},
// ];
// // ПЕРВЫЙ СПОСОБ
// // let sum = 0;

// // for(let i = 0; i < employees.length; i++){
// //     if(employees[i]['age'] >= 30){
// //         sum += employees[i]['salary'];
// //     }
// // }
// // console.log(sum);


// // ВТОРОЙ СПОСОБ
// let sum = 0;

// for(let elem of employees){
//     if(elem['age'] >= 30){
//         sum += elem['salary'];
//     }
// }
// console.log(sum);




// // Задача №4
// // Дан следующий массив работников, в котором поле dismissed хранит в себе информацию о том, уволен работник или нет (true - уволен):

// // let employees = [
// // 	{
// // 		name: 'name1',
// // 		salary: 300,
// // 		dismissed: false,
// // 	},
// // 	{
// // 		name: 'name2',
// // 		salary: 400,
// // 		dismissed: true,
// // 	},
// // 	{
// // 		name: 'name3',
// // 		salary: 500,
// // 		dismissed: false,
// // 	},
// // 	{
// // 		name: 'name4',
// // 		salary: 600,
// // 		dismissed: true,
// // 	},
// // 	{
// // 		name: 'name5',
// // 		salary: 700,
// // 		dismissed: false,
// // 	},
// // ];
// // Выведите на экран имена и зарплаты неуволенных работников.

// let employees = [
// 	{
// 		name: 'name1',
// 		salary: 300,
// 		dismissed: false,
// 	},
// 	{
// 		name: 'name2',
// 		salary: 400,
// 		dismissed: true,
// 	},
// 	{
// 		name: 'name3',
// 		salary: 500,
// 		dismissed: false,
// 	},
// 	{
// 		name: 'name4',
// 		salary: 600,
// 		dismissed: true,
// 	},
// 	{
// 		name: 'name5',
// 		salary: 700,
// 		dismissed: false,
// 	},
// ];

// for(let elem of employees){
//     if(!elem['dismissed']){
//         document.write('Имя: ' + elem['name'] + '; ' + ' Зарплата: ' + elem['salary'] + '<br>');
//     }
// }




// // Сложные структуры
// // Задача №5
// // Дана следующая структура с данными:

// // let data = {
// // 	1: [
// // 		'data11',
// // 		'data12',
// // 		'data13',
// // 	],
// // 	2: [
// // 		'data21',
// // 		'data22',
// // 		'data23',
// // 	],
// // 	3: [
// // 		'data31',
// // 		'data32',
// // 		'data33',
// // 		'data34',
// // 		'data35',
// // 	],
// // 	4: [
// // 		'data41',
// // 		'data42',
// // 	],
// // };
// // С помощью вложенных циклов выведите на экран все строки с данными.

// let data = {
// 	1: [
// 		'data11',
// 		'data12',
// 		'data13',
// 	],
// 	2: [
// 		'data21',
// 		'data22',
// 		'data23',
// 	],
// 	3: [
// 		'data31',
// 		'data32',
// 		'data33',
// 		'data34',
// 		'data35',
// 	],
// 	4: [
// 		'data41',
// 		'data42',
// 	],
// };

// // ПЕРВЫЙ СПОСОБ
// // for(let key in data){
// //     for(let elem of data[key]){
// //         console.log(elem);
// //     }
// // }


// // ВТОРОЙ СПОСОБ
// for(let key in data){
//     for(let i = 0; i < data[key].length; i++){
//         console.log(data[key][i]);
//     }
// }




// // Задача №6
// // Дана следующая структура с данными:
// // let data = [
// // 	{
// // 		1: 'data11',
// // 		2: 'data12',
// // 		3: 'data13',
// // 		4: 'data14',
// // 	},
// // 	{
// // 		1: 'data21',
// // 		2: 'data22',
// // 		3: 'data33',
// // 	},
// // 	{
// // 		1: 'data31',
// // 		2: 'data32',
// // 	},
// // ];
// // Количество объектов в массиве и количество элементов в объекте может быть произвольным.
// // С помощью вложенных циклов выведите на экран все строки с данными.

// let data = [
// 	{
// 		1: 'data11',
// 		2: 'data12',
// 		3: 'data13',
// 		4: 'data14',
// 	},
// 	{
// 		1: 'data21',
// 		2: 'data22',
// 		3: 'data33',
// 	},
// 	{
// 		1: 'data31',
// 		2: 'data32',
// 	},
// ];

// for(let elem of data){
//     for(let key in elem){
//         console.log(elem[key]);
//     }
// }




// // Задача №7
// // Дана следующая структура с данными:
// // let data = [
// // 	{
// // 		1: [
// // 			'data111',
// // 			'data112',
// // 			'data113',
// // 		],
// // 		2: [
// // 			'data121',
// // 			'data122',
// // 			'data123',
// // 		],
// // 	},
// // 	{
// // 		1: [
// // 			'data211',
// // 			'data212',
// // 			'data213',
// // 		],
// // 		2: [
// // 			'data221',
// // 			'data222',
// // 			'data223',
// // 			'data224',
// // 		],
// // 		3: [
// // 			'data231',
// // 			'data232',
// // 			'data233',
// // 			'data234',
// // 			'data235',
// // 		],
// // 	},
// // 	{
// // 		1: [
// // 			'data411',
// // 			'data412',
// // 			'data413',
// // 		],
// // 		2: [
// // 			'data421',
// // 		],
// // 	},
// // ];
// // С помощью вложенных циклов выведите на экран все строки с данными.

// let data = [
// 	{
// 		1: [
// 			'data111',
// 			'data112',
// 			'data113',
// 		],
// 		2: [
// 			'data121',
// 			'data122',
// 			'data123',
// 		],
// 	},
// 	{
// 		1: [
// 			'data211',
// 			'data212',
// 			'data213',
// 		],
// 		2: [
// 			'data221',
// 			'data222',
// 			'data223',
// 			'data224',
// 		],
// 		3: [
// 			'data231',
// 			'data232',
// 			'data233',
// 			'data234',
// 			'data235',
// 		],
// 	},
// 	{
// 		1: [
// 			'data411',
// 			'data412',
// 			'data413',
// 		],
// 		2: [
// 			'data421',
// 		],
// 	},
// ];

// for(let elem of data){
//     for(let key in elem){
//         for(let elems of elem[key]){
//             console.log(elems);
//         }
//     }
// }














// // Добавление элементов в многомерные массивы JavaScript
// // Задача №1
// // Дан следующий массив с юзерами:

// // let users = [
// // 	{
// // 		name: 'name1',
// // 		surname: 'surname1',
// // 		age: 30,
// // 	},
// // 	{
// // 		name: 'name2',
// // 		surname: 'surname2',
// // 		age: 31,
// // 	},
// // 	{
// // 		name: 'name2',
// // 		surname: 'surname2',
// // 		age: 32,
// // 	},
// // ];
// // Добавьте в этот массив еще одного юзера.

// let users = [
// 	{
// 		name: 'name1',
// 		surname: 'surname1',
// 		age: 30,
// 	},
// 	{
// 		name: 'name2',
// 		surname: 'surname2',
// 		age: 31,
// 	},
// 	{
// 		name: 'name2',
// 		surname: 'surname2',
// 		age: 32,
// 	},
// ];

// users.push({
//     name: 'name3',
// 	surname: 'surname3',
// 	age: 33
// });
// console.log(users);














// // Добавление элементов в многомерные объекты JavaScript
// // Задача №1
// // Дана вот такая структура для хранения списка дел за определенные даты:
// // let affairs = {
// // 	'2019-12-28': ['дело11', 'дело12', 'дело13'],
// // 	'2019-12-29': ['дело21', 'дело22', 'дело23'],
// // 	'2019-12-30': ['дело31', 'дело32', 'дело33'],
// // }
// // Добавьте еще одно дело в дату '2019-12-29'. Добавьте еще два дела в дату '2019-12-31'.

// let affairs = {
// 	'2019-12-28': ['дело11', 'дело12', 'дело13'],
// 	'2019-12-29': ['дело21', 'дело22', 'дело23'],
// 	'2019-12-30': ['дело31', 'дело32', 'дело33']
// }

// affairs['2019-12-29'].push('дело24');
// affairs['2019-12-31'] = [];
// affairs['2019-12-31'].push('дело34, дело35');
// console.log(affairs);




// // Задача №2
// // Добавьте нового студента в подгруппу 'subgroup11'.

// let students = {
// 	'group1': {
// 		'subgroup11': ['student111', 'student112', 'student113'],
// 		'subgroup12': ['student121', 'student122', 'student123'],
// 	},
// 	'group2': {
// 		'subgroup21': ['student211', 'student212', 'student213'],
// 		'subgroup22': ['student221', 'student222', 'student223'],
// 	},
// 	'group3': {
// 		'subgroup31': ['student311', 'student312', 'student313'],
// 		'subgroup32': ['student321', 'student322', 'student323'],
// 	},
// };

// students['group1']['subgroup11'].push('student114');
// console.log(students);




// // Задача №3
// // Добавьте в первую группу еще одну подгруппу.

// let students = {
// 	'group1': {
// 		'subgroup11': ['student111', 'student112', 'student113'],
// 		'subgroup12': ['student121', 'student122', 'student123'],
// 	},
// 	'group2': {
// 		'subgroup21': ['student211', 'student212', 'student213'],
// 		'subgroup22': ['student221', 'student222', 'student223'],
// 	},
// 	'group3': {
// 		'subgroup31': ['student311', 'student312', 'student313'],
// 		'subgroup32': ['student321', 'student322', 'student323'],
// 	},
// };

// students['group1']['subgroup13'] = [];
// console.log(students);




// // Задача №4
// // Сделайте четвертую группу, в ней сделайте подгруппу и добавьте в нее двух новых студентов.

// let students = {
// 	'group1': {
// 		'subgroup11': ['student111', 'student112', 'student113'],
// 		'subgroup12': ['student121', 'student122', 'student123'],
// 	},
// 	'group2': {
// 		'subgroup21': ['student211', 'student212', 'student213'],
// 		'subgroup22': ['student221', 'student222', 'student223'],
// 	},
// 	'group3': {
// 		'subgroup31': ['student311', 'student312', 'student313'],
// 		'subgroup32': ['student321', 'student322', 'student323'],
// 	},
// };

// students['group4'] = {
//     'subgroup41': ['student411', 'student412']
// };
// console.log(students);




// // Задача №5
// // Дана вот такая структура для хранения списка дел за определенные даты:
// // let affairs = {
// // 	'2019-12-28': ['дело11', 'дело12', 'дело13'],
// // 	'2019-12-29': ['дело21', 'дело22', 'дело23'],
// // 	'2019-12-30': ['дело31', 'дело32', 'дело33'],
// // }
// // Сделайте функцию addAffair, которая будет добавлять новое дело в заданную дату. Пусть функция первым параметром принимает дату, а вторым - дело.

// let affairs = {
// 	'2019-12-28': ['дело11', 'дело12', 'дело13'],
// 	'2019-12-29': ['дело21', 'дело22', 'дело23'],
// 	'2019-12-30': ['дело31', 'дело32', 'дело33'],
// }

// function addAffair(date, delo){
//     if(affairs[date] == undefined){
//         affairs[date] = [];
//     }
//     affairs[date].push(delo);
// };
// addAffair('2019-12-28', 'дело14');
// addAffair('2019-12-31', 'дело41');
// console.log(affairs);




// // Задача №6
// // Дана вот такая структура для хранения студентов:
// // let students = {
// // 	'group1' {
// // 		'subgroup11': ['student111', 'student112', 'student113'],
// // 		'subgroup12': ['student121', 'student122', 'student123'],
// // 	},
// // 	'group2' {
// // 		'subgroup21': ['student211', 'student212', 'student213'],
// // 		'subgroup22': ['student221', 'student222', 'student223'],
// // 	},
// // 	'group3' {
// // 		'subgroup31': ['student311', 'student312', 'student313'],
// // 		'subgroup32': ['student321', 'student322', 'student323'],
// // 	},
// // };
// // Сделайте функцию addStudent, которая будет добавлять нового студента. Пусть функция первым параметром принимает группу, а вторым - подгруппу, а третьим - имя студента.

// let students = {
// 	'group1': {
// 		'subgroup11': ['student111', 'student112', 'student113'],
// 		'subgroup12': ['student121', 'student122', 'student123'],
// 	},
// 	'group2': {
// 		'subgroup21': ['student211', 'student212', 'student213'],
// 		'subgroup22': ['student221', 'student222', 'student223'],
// 	},
// 	'group3': {
// 		'subgroup31': ['student311', 'student312', 'student313'],
// 		'subgroup32': ['student321', 'student322', 'student323'],
// 	},
// };

// function addStudent(group, subgroup, student){
//     if(students[group] == undefined){
//         students[group] = {};
//     }
//     if(students[group][subgroup] == undefined){
//         students[group][subgroup] = [];
//     }
//     students[group][subgroup].push(student);
// };

// addStudent('group4', 'subgroup41', 'student411');
// addStudent('group1', 'subgroup11', 'student114');
// addStudent('group2', 'subgroup23', 'student231');
// addStudent('group4', 'subgroup41', 'student412');
// console.log(students);




// // Задача №7
// // Дана вот такая структура для хранения списка дел за года, месяцы и дни:
// // let affairs = {
// // 	2018: {
// // 		11: {
// // 			29: ['дело111', 'дело112', 'дело113'],
// // 			30: ['дело121', 'дело122', 'дело123'],
// // 		},
// // 		12: {
// // 			30: ['дело211', 'дело212', 'дело213'],
// // 			31: ['дело221', 'дело222', 'дело223'],
// // 		},
// // 	},
// // 	2019: {
// // 		12: {
// // 			29: ['дело311', 'дело312', 'дело313'],
// // 			30: ['дело321', 'дело322', 'дело323'],
// // 			31: ['дело331', 'дело332', 'дело333'],
// // 		}
// // 	},
// // }
// // Сделайте функцию addAffair, которая будет добавлять новое дело в заданную дату. Пусть функция первым параметром принимает год, вторым - месяц, третьим - день, а четвертым - дело.

// let affairs = {
// 	2018: {
// 		11: {
// 			29: ['дело111', 'дело112', 'дело113'],
// 			30: ['дело121', 'дело122', 'дело123'],
// 		},
// 		12: {
// 			30: ['дело211', 'дело212', 'дело213'],
// 			31: ['дело221', 'дело222', 'дело223'],
// 		},
// 	},
// 	2019: {
// 		12: {
// 			29: ['дело311', 'дело312', 'дело313'],
// 			30: ['дело321', 'дело322', 'дело323'],
// 			31: ['дело331', 'дело332', 'дело333'],
// 		}
// 	},
// }

// function addAffair(year, month, day, delo){
//     if(affairs[year] == undefined){
//         affairs[year] = {};
//     }
//     if(affairs[year][month] == undefined){
//         affairs[year][month] = {};
//     }
//     if(affairs[year][month][day] == undefined){
//         affairs[year][month][day] = [];
//     }
//     affairs[year][month][day].push(delo);
// };
// addAffair(2020, 1, 1, 'дело001');
// addAffair(2018, 5, 12, 'дело005');
// addAffair(2019, 7, 5, 'дело006');
// addAffair(2020, 1, 1, 'дело002');
// addAffair(2018, 11, 31, 'дело131');
// console.log(affairs);














// // Практика на многомерные массивы и объекты в JavaScript
// // Задача №1
// // Дан такой объект:

// // let data = {
// // 	2018: {
// // 		11: {
// // 			29: [1, 2, 3],
// // 			30: [4, 5],
// // 		},
// // 		12: {
// // 			30: [6, 7],
// // 			31: [8, 9],
// // 		},
// // 	},
// // 	2019: {
// // 		12: {
// // 			29: [10, 11],
// // 			30: [12, 13],
// // 			31: [14, 15],
// // 		}
// // 	},
// // }
// // Запишите все элементы этого объекта в какой-нибудь массив, вот так:
// // [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

// let data = {
// 	2018: {
// 		11: {
// 			29: [1, 2, 3],
// 			30: [4, 5],
// 		},
// 		12: {
// 			30: [6, 7],
// 			31: [8, 9],
// 		},
// 	},
// 	2019: {
// 		12: {
// 			29: [10, 11],
// 			30: [12, 13],
// 			31: [14, 15],
// 		}
// 	},
// }

// let arr = [];

// for(let key1 in data){
//     for(let key2 in data[key1]){
//         for(let key3 in data[key1][key2]){
//             for(let elems of data[key1][key2][key3]){
//                 arr.push(elems);
//             }
//         }
//     }
// }
// console.log(arr);




// // Задача №2
// // Дан массив:
// // let affairs = [
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name1'
// // 	},
// // 	{
// // 		date:  '2019-12-31'
// // 		event: 'name2'
// // 	},
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name3'
// // 	},
// // 	{
// // 		date:  '2019-12-30'
// // 		event: 'name4'
// // 	},
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name5'
// // 	},
// // 	{
// // 		date:  '2019-12-31'
// // 		event: 'name6'
// // 	},
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name7'
// // 	},
// // 	{
// // 		date:  '2019-12-30'
// // 		event: 'name8'
// // 	},
// // 	{
// // 		date:  '2019-12-30'
// // 		event: 'name9'
// // 	},
// // ]
// // Получите из этого массива уникальные даты, то есть вот так:
// // ['2019-12-29', '2019-12-30', '2019-12-31']

// let affairs = [
// 	{
// 		date:  '2019-12-29',
// 		event: 'name1'
// 	},
// 	{
// 		date:  '2019-12-31',
// 		event: 'name2'
// 	},
// 	{
// 		date:  '2019-12-29',
// 		event: 'name3'
// 	},
// 	{
// 		date:  '2019-12-30',
// 		event: 'name4'
// 	},
// 	{
// 		date:  '2019-12-29',
// 		event: 'name5'
// 	},
// 	{
// 		date:  '2019-12-31',
// 		event: 'name6'
// 	},
// 	{
// 		date:  '2019-12-29',
// 		event: 'name7'
// 	},
// 	{
// 		date:  '2019-12-30',
// 		event: 'name8'
// 	},
// 	{
// 		date:  '2019-12-30',
// 		event: 'name9'
// 	},
// ]

// let arr = [];
// arr.push(affairs[0]['date']);
// arr.push(affairs[3]['date']);
// arr.push(affairs[5]['date']);
// console.log(arr);




// // Задача №3
// // Дан такой массив с юзерами:
// // let users = [
// // 	{
// // 		name: 'name1',
// // 		age: 31,
// // 		active: true,
// // 	},
// // 	{
// // 		name: 'name2',
// // 		age: 32,
// // 		active: false,
// // 	},
// // 	{
// // 		name: 'name3',
// // 		age: 33,
// // 		active: true,
// // 	},
// // 	{
// // 		name: 'name4',
// // 		age: 34,
// // 		active: false,
// // 	},
// // 	{
// // 		name: 'name5',
// // 		age: 35,
// // 		active: true,
// // 	},
// // ];
// // Выведите на экран тех юзеров, значение ключа active для которых равно true.

// let users = [
// 	{
// 		name: 'name1',
// 		age: 31,
// 		active: true,
// 	},
// 	{
// 		name: 'name2',
// 		age: 32,
// 		active: false,
// 	},
// 	{
// 		name: 'name3',
// 		age: 33,
// 		active: true,
// 	},
// 	{
// 		name: 'name4',
// 		age: 34,
// 		active: false,
// 	},
// 	{
// 		name: 'name5',
// 		age: 35,
// 		active: true,
// 	},
// ];

// for(let elem of users){
//     if(elem['active']){
//         console.log('Имя: ' + elem['name'] + '; ' + 'Возраст: ' + elem['age']);
//     }
// }




// // Задача №4
// // Даны города и их страны следующей структуре:
// // let data = [
// // 	{
// // 		country: 'Россия',
// // 		city:    'Москва',
// // 	},
// // 	{
// // 		country: 'Беларусь',
// // 		city:    'Минск',
// // 	},
// // 	{
// // 		country: 'Россия',
// // 		city:    'Питер',
// // 	},
// // 	{
// // 		country: 'Россия',
// // 		city:    'Владивосток',
// // 	},
// // 	{
// // 		country: 'Украина',
// // 		city:    'Львов',
// // 	},
// // 	{
// // 		country: 'Беларусь',
// // 		city:    'Могилев',
// // 	},
// // 	{
// // 		country: 'Украина',
// // 		city:    'Киев',
// // 	},
// // ];
// // Подсчитайте количество стран.

// let data = [
// 	{
// 		country: 'Россия',
// 		city:    'Москва',
// 	},
// 	{
// 		country: 'Беларусь',
// 		city:    'Минск',
// 	},
// 	{
// 		country: 'Россия',
// 		city:    'Питер',
// 	},
// 	{
// 		country: 'Россия',
// 		city:    'Владивосток',
// 	},
// 	{
// 		country: 'Украина',
// 		city:    'Львов',
// 	},
// 	{
// 		country: 'Беларусь',
// 		city:    'Могилев',
// 	},
// 	{
// 		country: 'Украина',
// 		city:    'Киев',
// 	},
// ];

// let obj	= {};

// for(let elem of data){
// 	for(let key in elem){
// 		console.log(elem['country']);
// 		if(obj[elem['country']] == undefined){
// 			obj[elem['country']] = 1;
// 		}
// 	}
// }
// console.log(obj);




// // Задача №5
// // Дан такой список дел за определенную дату:
// // let affairs = {
// // 	'2019-12-31': ['массив дел1'],
// // 	'2018-11-29': ['массив дел2'],
// // 	'2018-11-30': ['массив дел3'],
// // 	'2018-12-27': ['массив дел4'],
// // 	'2019-12-29': ['массив дел5'],
// // 	'2019-12-30': ['массив дел6'],
// // 	'2018-12-30': ['массив дел7'],
// // 	'2018-12-31': ['массив дел8'],
// // }
// // Выведите на экран все дела за 2018 год.
// // Выведите на экран все дела за 12 месяц 2018 года.

// let affairs = {
// 	'2019-12-31': ['массив дел1'],
// 	'2018-11-29': ['массив дел2'],
// 	'2018-11-30': ['массив дел3'],
// 	'2018-12-27': ['массив дел4'],
// 	'2019-12-29': ['массив дел5'],
// 	'2019-12-30': ['массив дел6'],
// 	'2018-12-30': ['массив дел7'],
// 	'2018-12-31': ['массив дел8'],
// }

// // // Выведите на экран все дела за 2018 год.
// // for(let key in affairs){
// // 	let str = key[0] + key[1] + key[2] + key[3];

// // 	if(str == '2018'){
// // 		for(let elem of affairs[key]){
// // 			console.log(elem);
// // 		}
// // 	}
// // }


// // Выведите на экран все дела за 12 месяц 2018 года.
// for(let key in affairs){
// 	let str = key[0] + key[1] + key[2] + key[3] + key[4] + key[5] + key[6];
	
// 	if(str == '2018-12'){
// 		for(let i = 0; i < affairs[key].length; i++){
// 			console.log(affairs[key][i]);
// 		}
// 	}
// }




// // Задача №6
// // Дан такой массив с юзерами:
// // let users = [
// // 	{
// // 		name: 'name1',
// // 		active: true,
// // 	},
// // 	{
// // 		name: 'name2',
// // 		active: false,
// // 	},
// // 	{
// // 		name: 'name3',
// // 		active: true,
// // 	},
// // 	{
// // 		name: 'name4',
// // 		active: false,
// // 	},
// // 	{
// // 		name: 'name5',
// // 		active: true,
// // 	},
// // ];
// // Сделайте две функции, которые будут менять значение поля active: первая функция пусть меняет на true, а вторая - на false.
// // Пусть наши функции параметрами принимают данный массив и номер юзера, над которым следует произвести изменения.
// // Пусть функции возвращают измененный массив.

// let users = [
// 	{
// 		name: 'name1',
// 		active: true,
// 	},
// 	{
// 		name: 'name2',
// 		active: false,
// 	},
// 	{
// 		name: 'name3',
// 		active: true,
// 	},
// 	{
// 		name: 'name4',
// 		active: false,
// 	},
// 	{
// 		name: 'name5',
// 		active: true,
// 	},
// ];

// function changeOnTrue(arr, user){
// 	for(let i = 0; i < arr.length; i++){
// 		if(Number(arr[i]['name'][4]) == user){
// 			if(arr[i]['active'] == false){
// 				arr[i]['active'] = true;
// 			}
// 		}
// 	}
// 	return arr;
// };

// function changeOnFalse(arr, user){
// 	for(let i = 0; i < arr.length; i++){
// 		if(Number(arr[i]['name'][4]) == user){
// 			if(arr[i]['active']){
// 				arr[i]['active'] = false;
// 			}
// 		}
// 	}
// 	return arr;
// };

// changeOnFalse(users, 1);
// changeOnFalse(users, 5);
// changeOnTrue(users, 4);
// console.log(users);














// // Удобное хранение данных в JavaScript
// // Задача №1
// // Даны данные в следующей структуре:
// // let data = [
// // 	{
// // 		country: 'Россия',
// // 		city:    'Москва',
// // 	},
// // 	{
// // 		country: 'Беларусь',
// // 		city:    'Минск',
// // 	},
// // 	{
// // 		country: 'Россия',
// // 		city:    'Питер',
// // 	},
// // 	{
// // 		country: 'Россия',
// // 		city:    'Владивосток',
// // 	},
// // 	{
// // 		country: 'Украина',
// // 		city:    'Львов',
// // 	},
// // 	{
// // 		country: 'Беларусь',
// // 		city:    'Могилев',
// // 	},
// // 	{
// // 		country: 'Украина',
// // 		city:    'Киев',
// // 	},
// // ];
// // Вам известно, что вам нужно будет получать массивы городов определенных стран. К примеру, нужно будет получить все города России, либо все города Беларуси. 
// // Также необходимо будет находить количество городов в определенной стране.
// // Решите поставленные задачи для текущей структуры хранения данных.
// // После этого ответьте на вопрос, удобна ли такая структура данных для решения поставленных задач?
// // Переделайте структуру на более удобную. Напишите решения поставленных задач для новой структуры данных.

// // let data = [
// // 	{
// // 		country: 'Россия',
// // 		city:    'Москва',
// // 	},
// // 	{
// // 		country: 'Беларусь',
// // 		city:    'Минск',
// // 	},
// // 	{
// // 		country: 'Россия',
// // 		city:    'Питер',
// // 	},
// // 	{
// // 		country: 'Россия',
// // 		city:    'Владивосток',
// // 	},
// // 	{
// // 		country: 'Украина',
// // 		city:    'Львов',
// // 	},
// // 	{
// // 		country: 'Беларусь',
// // 		city:    'Могилев',
// // 	},
// // 	{
// // 		country: 'Украина',
// // 		city:    'Киев',
// // 	},
// // ];

// // // // 1. К примеру, нужно будет получить все города России, либо все города Беларуси.

// // // for(elem of data){
// // // 	if(elem['country'] == 'Россия'){
// // // 		console.log(elem['city']);
// // // 	}
// // // }

// // // for(elem of data){
// // // 	if(elem['country'] == 'Беларусь'){
// // // 		console.log(elem['city']);
// // // 	}
// // // }


// // // // 2. Также необходимо будет находить количество городов в определенной стране.

// // // let obj	= {};

// // // for(let elem of data){
// // // 	if(obj[elem['country']] == undefined){
// // // 		obj[elem['country']] = 0;
// // // 	}
// // // 	obj[elem['country']]++;
// // // }
// // // console.log(obj);


// // После этого ответьте на вопрос, удобна ли такая структура данных для решения поставленных задач?
// // Переделайте структуру на более удобную. Напишите решения поставленных задач для новой структуры данных.

// // Ответ: Такая структура данных не очень удобна. Поэтому предлагаю следующее решение:

// let data = {
// 	'Россия': 		['Москва', 'Питер', 'Владивосток'],
// 	'Беларусь': 	['Минск', 'Могилев'],
// 	'Украина':		['Львов', 'Киев']
// };

// // // Таким образом мы уже решаем одну из зачад, а именно в нашем объекте мы видим какое кол-во городов содержится в той или иной стране, например
// // // Узнаем количество городов в России, а затем в Украине.
// // console.log(data['Россия'].length);
// // console.log(data['Украина'].length);

// // Теперь я хочу получить все города России и все города Украины

// for(let key in data){
// 	if(key == 'Россия'){
// 		// console.log(data[key]);
// 		for(let cities of data[key]){
// 			console.log(cities);
// 		}
// 	}
// }

// // Такой подход более красивый и простой, потому что не обязательно даже перебирать все циклом, можно просто вывести все города по ключу стране в виде массива, записать их в переменную, а далее
// // работать с ними отдельно, если это будет необходимо




// // Задача №2
// // Дан список каких-то данных за определенные даты, хранящийся в следующей структуре:
// // let data = [
// // 	{
// // 		year:  2019,
// // 		month: 11,
// // 		day: 20,
// // 		data: ['массив с данными']
// // 	},
// // 	{
// // 		year:  2019,
// // 		month: 11,
// // 		day: 21,
// // 		data: ['массив с данными']
// // 	},
// // 	{
// // 		year:  2019,
// // 		month: 12,
// // 		day: 25,
// // 		data: ['массив с данными']
// // 	},
// // 	{
// // 		year:  2019,
// // 		month: 12,
// // 		day: 26,
// // 		data: ['массив с данными']
// // 	},
// // 	{
// // 		year:  2020,
// // 		month: 10,
// // 		day: 29,
// // 		data: ['массив с данными']
// // 	},
// // 	{
// // 		year:  2020,
// // 		month: 10,
// // 		day: 30,
// // 		data: ['массив с данными']
// // 	},
// // 	{
// // 		year:  2020,
// // 		month: 11,
// // 		day: 19,
// // 		data: ['массив с данными']
// // 	},
// // 	{
// // 		year:  2020,
// // 		month: 11,
// // 		day: 20,
// // 		data: ['массив с данными']
// // 	},
// // ]
// // Пусть вам нужно будет получать данные за определенный день, за определенный месяц, и за определенный год. Удобна ли текущая структура хранения данных для этого?
// // Если да, оставьте все как есть, если нет, переделайте структуру на более удобную. Получите затем все данные за 2020 год.

// let data = {
// 	2019: {
// 		11: {
// 			20: ['массив с данными'],
// 			21: ['массив с данными']
// 		},
// 		12: {
// 			25: ['массив с данными'],
// 			26: ['массив с данными']
// 		}
// 	},
// 	2020: {
// 		10: {
// 			29: ['массив с данными'],
// 			30: ['массив с данными']
// 		},
// 		11: {
// 			19: ['массив с данными'],
// 			20: ['массив с данными']
// 		}
// 	}
// };
// console.log(data['2020']);
// console.log(data['2019']['12']['25']);




// // Задача №3
// // Дана следующая структура для хранения событий и их дат:
// // let affairs = [
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name1'
// // 	},
// // 	{
// // 		date:  '2019-12-31'
// // 		event: 'name2'
// // 	},
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name3'
// // 	},
// // 	{
// // 		date:  '2019-12-30'
// // 		event: 'name4'
// // 	},
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name5'
// // 	},
// // 	{
// // 		date:  '2019-12-31'
// // 		event: 'name6'
// // 	},
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name7'
// // 	},
// // 	{
// // 		date:  '2019-12-30'
// // 		event: 'name8'
// // 	},
// // 	{
// // 		date:  '2019-12-30'
// // 		event: 'name9'
// // 	},
// // ]
// // Пусть вам нужно будет получать список событий за определенную дату. Удобна ли текущая структура хранения данных для этого?
// // Если да, оставьте все как есть, если нет, переделайте структуру на более удобную. Получите затем список событий за '2019-12-30'.

// let affairs = {
// 	'2019-12-29': ['name1', 'name3', 'name5', 'name7'],
// 	'2019-12-30': ['name4', 'name8', 'name9'],
// 	'2019-12-31': ['name2', 'name6']
// }

// for(let key in affairs){
// 	if(key == '2019-12-30'){
// 		for(let events of affairs[key]){
// 			console.log(events);
// 		}
// 	}
// }
// console.log(affairs['2019-12-30']);




// // Задача №4
// // Пусть перед вами стоит задача хранения гороскопов для знаков зодиака. Гороскопы хранятся на несколько месяцев вперед.
// // Необходимо будет получать гороскопы всех знаков зодиака за определенный день, а также гороскоп конкретного знака зодиака за определенный день.
// // Продумайте удобную структуру хранения данных. Укажите ее преимущества и недостатки. Поясните, для решения каких задач придуманная вами структура будет неудобна.

// let data = {
//     5: {
//         1: {
//             'Овен': 'Гороскоп для Овена',
//             'Телец': 'Гороскоп для Телеца',
//             'Близнецы': 'Гороскоп для Близнецов',
//             'Рак': 'Гороскоп для Рака',
//             'Лев': 'Гороскоп для Льва',
//             'Дева': 'Гороскоп для Девы',
//             'Весы': 'Гороскоп для Весов',
//             'Скорпион': 'Гороскоп для Скорпионов',
//             'Змееносец': 'Гороскоп для Змей',
//             'Стрелец': 'Гороскоп для Стрелецов',
//             'Козерог': 'Гороскоп для Козерогов',
//             'Водолей': 'Гороскоп для Водолеев',
//             'Рыбы': 'Гороскоп для Рыб'
//         },
//         2: {
//             'Овен': 'Гороскоп для Овена',
//             'Телец': 'Гороскоп для Телеца',
//             'Близнецы': 'Гороскоп для Близнецов',
//             'Рак': 'Гороскоп для Рака',
//             'Лев': 'Гороскоп для Льва',
//             'Дева': 'Гороскоп для Девы',
//             'Весы': 'Гороскоп для Весов',
//             'Скорпион': 'Гороскоп для Скорпионов',
//             'Змееносец': 'Гороскоп для Змей',
//             'Стрелец': 'Гороскоп для Стрелецов',
//             'Козерог': 'Гороскоп для Козерогов',
//             'Водолей': 'Гороскоп для Водолеев',
//             'Рыбы': 'Гороскоп для Рыб'
//         }
//     },
//     6: {
//         20: {
//             'Овен': 'Гороскоп для Овена',
//             'Телец': 'Гороскоп для Телеца',
//             'Близнецы': 'Гороскоп для Близнецов',
//             'Рак': 'Гороскоп для Рака',
//             'Лев': 'Гороскоп для Льва',
//             'Дева': 'Гороскоп для Девы',
//             'Весы': 'Гороскоп для Весов',
//             'Скорпион': 'Гороскоп для Скорпионов',
//             'Змееносец': 'Гороскоп для Змей',
//             'Стрелец': 'Гороскоп для Стрелецов',
//             'Козерог': 'Гороскоп для Козерогов',
//             'Водолей': 'Гороскоп для Водолеев',
//             'Рыбы': 'Гороскоп для Рыб'
//         },
//         21: {
//             'Овен': 'Гороскоп для Овена',
//             'Телец': 'Гороскоп для Телеца',
//             'Близнецы': 'Гороскоп для Близнецов',
//             'Рак': 'Гороскоп для Рака',
//             'Лев': 'Гороскоп для Льва',
//             'Дева': 'Гороскоп для Девы',
//             'Весы': 'Гороскоп для Весов',
//             'Скорпион': 'Гороскоп для Скорпионов',
//             'Змееносец': 'Гороскоп для Змей',
//             'Стрелец': 'Гороскоп для Стрелецов',
//             'Козерог': 'Гороскоп для Козерогов',
//             'Водолей': 'Гороскоп для Водолеев',
//             'Рыбы': 'Гороскоп для Рыб'
//         },
//     }
// };
// console.log(data['5']['1']);
// console.log(data['5']['1']['Близнецы']);
// // Преимущества такой структуры в том, что мы легко может получить все гороскопы за определенный день, определенного месяца, а так же довольно просто будет получить гороскоп для конкретного знака
// // зодиака за определенный день. Недостаток будет в том, что довольно объемное получится хранение данных.




// // Задача №5
// // Пусть перед вами стоит задача хранения списка учеников какой-то школы. Нужно будет хранить имя, фамилию и отчество каждого ученика за все 11 классов школы.
// // Необходимо будет получать список учеников за определенный класс, например, всех учеников 10-го класса или всех учеников 11-го класса. 
// // Также необходимо будет получать учеников за определенную параллель, например, всех учеников 10А класса или всех учеников 10Б класса.
// // Продумайте удобную структуру хранения данных. Укажите ее преимущества и недостатки. Поясните, для решения каких задач придуманная вами структура будет неудобна.

// let data = {
//     1: {
//         'A': [
//             {
//                 'name': 'имя1',
//                 'surname': 'Фамилия1',
//                 'middleName': 'Отчество1',
//             },
//             {
//                 'name': 'имя2',
//                 'surname': 'Фамилия2',
//                 'middleName': 'Отчество2',
//             },
//         ],
//         'Б': [
//             {
//                 'name': 'имя1',
//                 'surname': 'Фамилия1',
//                 'middleName': 'Отчество1',
//             },
//             {
//                 'name': 'имя2',
//                 'surname': 'Фамилия2',
//                 'middleName': 'Отчество2',
//             },
//         ]
//     },
//     2: {
//         'A': [
//             {
//                 'name': 'имя1',
//                 'surname': 'Фамилия1',
//                 'middleName': 'Отчество1',
//             },
//             {
//                 'name': 'имя2',
//                 'surname': 'Фамилия2',
//                 'middleName': 'Отчество2',
//             },
//         ],
//         'Б': [
//             {
//                 'name': 'имя1',
//                 'surname': 'Фамилия1',
//                 'middleName': 'Отчество1',
//             },
//             {
//                 'name': 'имя2',
//                 'surname': 'Фамилия2',
//                 'middleName': 'Отчество2',
//             },
//         ]
//     }
// };
// console.log(data);

// for(let key in data){
//     if(key == 1){
//         for(let podclass in data[key]){
//             for(let elem of data[key][podclass]){
//                 console.log(elem['name']);
//             }
//         }
//     }
// }














// // Конвертация многомерных структур в JavaScript
// // Задача №1
// // Дан список городов и их стран, хранящийся в следующей структуре:
// // let data = [
// // 	{
// // 		country: 'Россия',
// // 		city:    'Москва',
// // 	},
// // 	{
// // 		country: 'Беларусь',
// // 		city:    'Минск',
// // 	},
// // 	{
// // 		country: 'Россия',
// // 		city:    'Питер',
// // 	},
// // 	{
// // 		country: 'Россия',
// // 		city:    'Владивосток',
// // 	},
// // 	{
// // 		country: 'Украина',
// // 		city:    'Львов',
// // 	},
// // 	{
// // 		country: 'Беларусь',
// // 		city:    'Могилев',
// // 	},
// // 	{
// // 		country: 'Украина',
// // 		city:    'Киев',
// // 	},
// // ]
// // Напишите код, которой переделает структуру данных вот в такую:
// // {
// // 	'Россия': [
// // 		'Москва', 'Питер', 'Владивосток',
// // 	],
// // 	'Беларусь': [
// // 		'Минск', 'Могилев'
// // 	],
// // 	'Украина': [
// // 		'Киев', 'Львов'
// // 	],
// // }

// let data = [
// 	{
// 		country: 'Россия',
// 		city:    'Москва',
// 	},
// 	{
// 		country: 'Беларусь',
// 		city:    'Минск',
// 	},
// 	{
// 		country: 'Россия',
// 		city:    'Питер',
// 	},
// 	{
// 		country: 'Россия',
// 		city:    'Владивосток',
// 	},
// 	{
// 		country: 'Украина',
// 		city:    'Львов',
// 	},
// 	{
// 		country: 'Беларусь',
// 		city:    'Могилев',
// 	},
// 	{
// 		country: 'Украина',
// 		city:    'Киев',
// 	},
// ]

// let result = {};
// for(let elem of data){
//     if(result[elem['country']] == undefined){
//         result[elem['country']] = [];
//     }
//     result[elem['country']].push(elem['city']);
// }
// console.log(result);




// // Задача №2
// // Дан список событий за определенные даты, хранящийся в следующей структуре:
// // let events = [
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name1'
// // 	},
// // 	{
// // 		date:  '2019-12-31'
// // 		event: 'name2'
// // 	},
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name3'
// // 	},
// // 	{
// // 		date:  '2019-12-30'
// // 		event: 'name4'
// // 	},
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name5'
// // 	},
// // 	{
// // 		date:  '2019-12-31'
// // 		event: 'name6'
// // 	},
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name7'
// // 	},
// // 	{
// // 		date:  '2019-12-30'
// // 		event: 'name8'
// // 	},
// // 	{
// // 		date:  '2019-12-30'
// // 		event: 'name9'
// // 	},
// // ]
// // Напишите код, которой переделает структуру данных вот в такую:
// // {
// // 	'2019-12-29': ['name1', 'name3', 'name5', 'name7'],
// // 	'2019-12-30': ['name4', 'name8', 'name9'],
// // 	'2019-12-31': ['name2', 'name6'],
// // }

// let events = [
// 	{
// 		date:  '2019-12-29',
// 		event: 'name1'
// 	},
// 	{
// 		date:  '2019-12-31',
// 		event: 'name2'
// 	},
// 	{
// 		date:  '2019-12-29',
// 		event: 'name3'
// 	},
// 	{
// 		date:  '2019-12-30',
// 		event: 'name4'
// 	},
// 	{
// 		date:  '2019-12-29',
// 		event: 'name5'
// 	},
// 	{
// 		date:  '2019-12-31',
// 		event: 'name6'
// 	},
// 	{
// 		date:  '2019-12-29',
// 		event: 'name7'
// 	},
// 	{
// 		date:  '2019-12-30',
// 		event: 'name8'
// 	},
// 	{
// 		date:  '2019-12-30',
// 		event: 'name9'
// 	},
// ]

// let result = {};
// for(let elem of events){
//     if(result[elem['date']] == undefined){
//         result[elem['date']] = [];
//     }
//     result[elem['date']].push(elem['event']);
// }
// console.log(result);




// // Задача №3
// // Дан список событий за определенные даты, хранящийся в следующей структуре:
// // let events = {
// // 	'2019-12-29': ['name1', 'name3', 'name5', 'name7'],
// // 	'2019-12-30': ['name4', 'name8', 'name9'],
// // 	'2019-12-31': ['name2', 'name6'],
// // }
// // Напишите код, которой переделает структуру данных вот в такую:
// // let events = [
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name1'
// // 	},
// // 	{
// // 		date:  '2019-12-31'
// // 		event: 'name2'
// // 	},
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name3'
// // 	},
// // 	{
// // 		date:  '2019-12-30'
// // 		event: 'name4'
// // 	},
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name5'
// // 	},
// // 	{
// // 		date:  '2019-12-31'
// // 		event: 'name6'
// // 	},
// // 	{
// // 		date:  '2019-12-29'
// // 		event: 'name7'
// // 	},
// // 	{
// // 		date:  '2019-12-30'
// // 		event: 'name8'
// // 	},
// // 	{
// // 		date:  '2019-12-30'
// // 		event: 'name9'
// // 	},
// // ]

// let events = {
// 	'2019-12-29': ['name1', 'name3', 'name5', 'name7'],
// 	'2019-12-30': ['name4', 'name8', 'name9'],
// 	'2019-12-31': ['name2', 'name6'],
// }

// let result = [];

// for(let key in events){
//     for(let elem of events[key]){
//         result.push({
//             date: key,
//             event: elem
//         });
//     }
// }
// console.log(result);




// // Задача №4
// // Дан список событий за определенные месяцы, хранящийся в следующей структуре:
// // let events = [
// // 	{
// // 		date:  '2019-12'
// // 		event: 'name1'
// // 	},
// // 	{
// // 		date:  '2019-12'
// // 		event: 'name2'
// // 	},
// // 	{
// // 		date:  '2019-11'
// // 		event: 'name3'
// // 	},
// // 	{
// // 		date:  '2019-11'
// // 		event: 'name4'
// // 	},
// // 	{
// // 		date:  '2020-10'
// // 		event: 'name5'
// // 	},
// // 	{
// // 		date:  '2020-10'
// // 		event: 'name6'
// // 	},
// // 	{
// // 		date:  '2020-11'
// // 		event: 'name5'
// // 	},
// // 	{
// // 		date:  '2020-11'
// // 		event: 'name6'
// // 	},
// // 	{
// // 		date:  '2020-12'
// // 		event: 'name7'
// // 	},
// // 	{
// // 		date:  '2020-12'
// // 		event: 'name8'
// // 	},
// // 	{
// // 		date:  '2020-12'
// // 		event: 'name9'
// // 	},
// // ]
// // Напишите код, которой переделает структуру данных вот в такую:
// // {
// // 	2019: {
// // 		11: [массив событий],
// // 		12: [массив событий],
// // 	}
// // 	2020: {
// // 		10: [массив событий],
// // 		11: [массив событий],
// // 		12: [массив событий],
// // 	}
// // }

// let events = [
// 	{
// 		date:  '2019-12',
// 		event: 'name1'
// 	},
// 	{
// 		date:  '2019-12',
// 		event: 'name2'
// 	},
// 	{
// 		date:  '2019-11',
// 		event: 'name3'
// 	},
// 	{
// 		date:  '2019-11',
// 		event: 'name4'
// 	},
// 	{
// 		date:  '2020-10',
// 		event: 'name5'
// 	},
// 	{
// 		date:  '2020-10',
// 		event: 'name6'
// 	},
// 	{
// 		date:  '2020-11',
// 		event: 'name5'
// 	},
// 	{
// 		date:  '2020-11',
// 		event: 'name6'
// 	},
// 	{
// 		date:  '2020-12',
// 		event: 'name7'
// 	},
// 	{
// 		date:  '2020-12',
// 		event: 'name8'
// 	},
// 	{
// 		date:  '2020-12',
// 		event: 'name9'
// 	},
// ]

// let result = {};
// for(let elem of events){
//     let date = elem['date'].split('-');
//     let year    = date[0];
//     let month   = date[1];

//     if(result[year] == undefined){
//         result[year] = {};
//     }
//     if(result[year][month] == undefined){
//         result[year][month] = [];
//     }
//     result[year][month].push(elem['event']);
// }
// console.log(result);




// Задача №5
// Дан список каких-то данных за определенные даты, хранящийся в следующей структуре:
// let data = [
// 	{
// 		year:  2019,
// 		month: 11,
// 		day: 20,
// 		data: ['массив с данными']
// 	},
// 	{
// 		year:  2019,
// 		month: 11,
// 		day: 21,
// 		data: ['массив с данными']
// 	},
// 	{
// 		year:  2019,
// 		month: 12,
// 		day: 25,
// 		data: ['массив с данными']
// 	},
// 	{
// 		year:  2019,
// 		month: 12,
// 		day: 26,
// 		data: ['массив с данными']
// 	},
// 	{
// 		year:  2020,
// 		month: 10,
// 		day: 29,
// 		data: ['массив с данными']
// 	},
// 	{
// 		year:  2020,
// 		month: 10,
// 		day: 30,
// 		data: ['массив с данными']
// 	},
// 	{
// 		year:  2020,
// 		month: 11,
// 		day: 19,
// 		data: ['массив с данными']
// 	},
// 	{
// 		year:  2020,
// 		month: 11,
// 		day: 20,
// 		data: ['массив с данными']
// 	},
// }
// Напишите код, которой переделает структуру данных в структуру вида:
// {
// 	год1: {
// 		месяц1: {
// 			день1: [массив данных],
// 			день2: [массив данных],
// 			день3: [массив данных],
// 		}
// 		месяц2: {
// 			день1: [массив данных],
// 			день2: [массив данных],
// 			день3: [массив данных],
// 		}
// 	}
// 	год2: {
// 		месяц1: {
// 			день1: [массив данных],
// 			день2: [массив данных],
// 			день3: [массив данных],
// 		}
// 		месяц2: {
// 			день1: [массив данных],
// 			день2: [массив данных],
// 			день3: [массив данных],
// 		}
// 	}
// }

let data = [
	{
		year:  2019,
		month: 11,
		day: 20,
		data: ['массив с данными']
	},
	{
		year:  2019,
		month: 11,
		day: 21,
		data: ['массив с данными']
	},
	{
		year:  2019,
		month: 12,
		day: 25,
		data: ['массив с данными']
	},
	{
		year:  2019,
		month: 12,
		day: 26,
		data: ['массив с данными']
	},
	{
		year:  2020,
		month: 10,
		day: 29,
		data: ['массив с данными']
	},
	{
		year:  2020,
		month: 10,
		day: 30,
		data: ['массив с данными']
	},
	{
		year:  2020,
		month: 11,
		day: 19,
		data: ['массив с данными']
	},
	{
		year:  2020,
		month: 11,
		day: 20,
		data: ['массив с данными']
	},
]

let result = {};
for(let elem of data){
    if(result[elem['year']] == undefined){
        result[elem['year']] = {};
	}
	if(result[elem['year']][elem['month']] == undefined){
		result[elem['year']][elem['month']] = {};
	}
	if(result[elem['year']][elem['month']][elem['day']] == undefined){
		result[elem['year']][elem['month']][elem['day']] = [];
	}
	result[elem['year']][elem['month']][elem['day']].push(elem['data']);
}
console.log(result);