let money, time;                                                                                                                                      // Сделали наши переменные ГЛОБАЛЬНЫМИ, т.к. если использовать их внутри функции, то снаружи они будут не видны                                                                                                                

function start () {
    money = +prompt('Ваш бюджет на месяц?', '');                                                                                                      // Создаем переменную, которая спрашивает пользователя: "Ваш бюджет на месяц?". Унатный плюсик перед prompt нужен для того, чтобы сделать наши данные от пользователя числом, а не строкой
    time  = prompt('Введите дату в формате YYYY-MM-DD', '');                                                                                          // Создаем переменную, которая просит пользователя: "Введите дату в формате YYYY-MM-DD"

    while (isNaN(money) || money == '' || money == null) {                                                                                            // Делаем проверки чтобы пользователь не мог ввести буквы в бюджет, метод isNaN будет true в том случае, когда попадут НЕ цифры. Далее проверяем, чтобы строка не была пустой. далее проверяем, чтобы пользователь не мог нажать кнопку отмены
        money = +prompt('Ваш бюджет на месяц?', '');                                                                                                  // Соответственно пока в цикле одно из условий не выполнится, так и будет задавать вопрос пользователю ввести бюджет
    }
};
start();                                                                                                                                              // Вызываем функцию, которую писали

let appData = {                                                                                                                                       // Создаем объект appData, который будет содержать такие данные:
    budjet:             money,                                                                                                                        // бюджет (передаем сюда переменную из п.2),
    timeData:           time,                                                                                                                         // данные времени - timeData (передаем сюда переменную из п.2),
    expenses:           {},                                                                                                                           // объект с обязательными расходами - expenses (смотри пункт 4),
    optionalExpenses:   {},                                                                                                                           // объект с необязательными расходами - optionalExpenses (оставляем пока пустым),
    income:             [],                                                                                                                           // массив данных с доп. доходом - income (оставляем пока пустым),
    savings:            true,                                                                                                                         // свойство savings (выставляем его как false)
    chooseExpenses:     function () {                                                                                                                 // Переносим в объект нашу функцию на вопросы по доп. расходам
        for (let i = 0; i < 2; i++){                                                                                                                  // Задать пользователю по 2 раза вопросы: “Введите обязательную статью расходов в этом месяце”, “Во сколько обойдется?”. Записать ответы в объект expenses
            let a = prompt('Введите обязательную статью расходов в этом месяце', ''),                                                                 // Начинаем цикл, т.к. блоков вопросов 2, то и ставим, что i < 2. Далее пишем наши вопросы под 2 переменными. Затем 
                b = prompt('Во сколько обойдется?', '');
        
            if ( (typeof(a)) === 'string' && (typeof(a)) != null && (typeof(b)) != null && a != '' && b != '' && a.length < 50) {                     // Пишем проверку на то, чтобы пользователь не мог отменить наш вопрос, не мог оставить строку пустой. С помощью typeof(a) делаем прорверку, чтобы наши данные от пользователя были строкой. Далее выполняем проверку, чтобы пользователь не нажал отмену, если нажимает отмену, то это тип данных null, поэтому просто проверяем чтобы тип данных не был null. Так же проверяем, чтобы наши ответы от пользователя (переменные) a и b не были равны пустой строке. Ну и делаем проверку с помощью свойста lenght кол-ва символов, которое может ввести пользователь. Если все это выполняется, то выполняем действия ниже
                appData.expenses[a] = b;                                                                                                              // записываем в наш expenses наши вопросы. Т.е. добераемся до глобального объекта appData, получаем ключ expenses и в него записываем в [Т.е. переменная] нашу переменную а, которая равна b. Таким образом в объекте expenses мы создали пару: ключ (а) и заничение (b)
            }else {                                                                                                                                   // Если пользователь не соблюдает требования по проверке выше, то тогда возвращаем его к вопросу занова
                i--;
            }
        };
    },
    detectDayBudget:    function () {
        appData.moneyPerDay = (appData.budjet / 30).toFixed(1);                                                                                       // Содаем новый ключ в глобальном объекте и присваиваем значение бюджета на 1 день. Вывести на экран пользователя бюджет на 1 день (брать месяц за 30 дней, использовать alert). Т.е. берем нам глобальный объект appData, получаем ключ budjet и делим на 30. Метод toFixed() позволяет нам округлить число до целового или до 1-... знаков в скобках. Но нужно помнить, что toFixed возвращает нам стоковое значение, т.е. тип данных строку
        alert('Ежедневный бюджет: ' + appData.moneyPerDay);                                                                                           // Выводим на экран бюджет человека на 1 день
    },
    detectLevel:        function () {                                                                                                                 // Оформляем блок кода с уровнем достутка в отдельную функцию
        if (appData.moneyPerDay < 100) {                                                                                                              // Делаем проверки на то, что бюджет на 1 день, который рассчитался из данных от пользователя приравнивается к каким-то нормам, которые пишутся в условиях
            console.log('Минимальный уровень достатка');
        }else if (appData.moneyPerDay > 100 && appData.moneyPerDay < 2000) {
            console.log('Средний уровень достатка');
        }else if (appData.moneyPerDay > 2000) {
            console.log('Высокий уровень достатка');
        }else {
            console.log('Произошла ошибка');
        };
    },
    checkSavings:       function () {
        if (appData.savings == true) {                                                                                                                // Делаем проверку на то, что наш savings в значении true и у пользователя есть накопления
            let save    = +prompt('Какова сумма накоплений?', ''),                                                                                    // Создаем 2 переменные в которых спрашиваем у пользователя след.вопросы
                percent = +prompt('Под какой процент?', '');
    
            appData.monthIncome = save/100/12*percent;                                                                                                // Создаем новый ключ в глобальном объекте, под названием monthIncome, который включает в себе формулу по рассчету прибыли за месяц
            alert('Доход в месяц с Вашего депозита: ' + appData.monthIncome);                                                                         // Выводим это сообщение на экран пользователю
        };
    },
    chooseOptExpenses:  function () {
        for (let i = 1; i <= 3; i++) {                                                                                                                // Прописываем цикл с условиями, что i начинается с 1, и до 3
            let questionOptExpenses = prompt('Статья необязательных расходов?', '');                                                                  // Создаем переменную с вопросом пользователю
    
            appData.optionalExpenses[i] = questionOptExpenses;                                                                                        // Создаем в глобальном объекте новый ключ optionalExpenses с префиксом [i] чтобы каждый новый цикл ответ записывался с 1 до 3, и присваиваем все наши ответы полученные от пользователя
            console.log(appData.optionalExpenses);
        };
    },
    chooseIncome:       function () {                                                                                                                 // Пишем новую функцию о доп.доходе
        let items = prompt('Что принесет дополнительный доход? (Перечислите через запятую)', '');                                                     // Создаем переменную с вопросом

        if ( (typeof(items)) != 'string' || (typeof(items)) == null || items == '') {                                                                 // Пишем проверку на то, чтобы пользователь не мог Ввести в дополнительных доходах (chooseIncome) только строку, Не может оставить строку пустой, Не может отменить вопрос
            console.log('Вы ввели некорректные данные или не ввели их вовсе');
        }else {
            appData.income = items.split(', ');                                                                                                       // Берем в глобальном объекте наш массив income и вызываем метод split, который превращает строку в массив с разделителем ","
            appData.income.push(prompt('Может что-то еще принесет прибыль?', ''));                                                                    // Так же помешаем в наш массив в конц массива с помощью метода push еще один вопрос от пользователя
            appData.income.sort();                                                                                                                    // Делаем сортировку по алфавиту с помощью метода sort
        }

        appData.income.forEach(function (item, index) {                                                                                               // С помощью метода прохода массива методом forEach перебираем наш массив
            alert('Способы доп. заработка: ' + (index + 1) + '. ' + item);                                                                            // Выводим сначала индекс (т.к. начало с 0, то приплюсовываем 1, чтобы было с 1), затем показываем непосредственно наши ответы от пользователя от массива доп. дохода
        });
    }
};

for (let key in appData) {                                                                                                                            // С помощью цикла перебираем наш глобальный объект с выводом в консоль все наши возможности
    console.log('Наша программа включает в себя данные: ' + key + ' - ' + appData[key]);
}