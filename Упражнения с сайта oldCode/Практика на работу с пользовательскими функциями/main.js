// // В этом уроке мы с вами будем отрабатывать полученные ранее знания по пользовательским функциям на практических задачах. 
// // В качестве теории в этом уроке выступают разборы задач. Внимательно их изучите и только потом переходите к решению задач из задачника.

// // Функция inArray
// // Задача: реализуйте функцию inArray, которая будет проверять, есть ли в массиве элемент с таким значением или нет. 
// // Первым параметром функция должна принимать значение, а вторым - массив. Если такой элемент есть - функция должна вернуть true, а если нет - false.

// function inArray(value, arr) {
// 	for (var i = 0; i < arr.length; i++) {
// 		if(arr[i] == value) {
// 			return true;
// 		}
// 	}
// 	return false;
// }

// var arr = [1, 2, 3, 4, 5];
// alert(inArray(3, arr));

// let arr = [1, 3, 5, 7, 54, 'd'];
// console.log(inArray(2, arr));




// // Простые числа
// // Задача: реализуйте функцию isSimple, которая параметром будет принимать число и проверять, простое оно или нет. 
// // Простое число - это число, которое не делится ни на одно другое число (кроме как на 1 и на само себя - на это делятся все числа). 
// // Если число простое - функция должна вернуть true, в противном случае false.

// function isSimple(number){
//     for(let i = 2; i < number; i++){
//         if(number % i == 0){
//             return false;
//         }
//     }
//     return true;
// };
// console.log(isSimple(11));




// // Делители
// // Задача: реализуйте функцию getDivisors, которая параметром будет принимать число и возвращать массив его делителей, то есть чисел, на которое делится наше число. 
// // К примеру, если мы передадим число 24 - мы должны получить массив [1, 2, 3, 4, 6, 12, 24].

// function getDivisors(num) {
// 	var result = [];

// 	for (var i = 1; i <= num; i++) {
// 		if((num % i) == 0) {
// 			result.push(i);
// 		}
// 	}

// 	return result;
// }
// console.log(getDivisors(11));




// // Пересечение массивов
// // Задача: реализуйте функцию getIntersection, которая параметрами будет принимать два массива и возвращать массив элементов, 
// // которые есть и в одном, и во втором массиве (это называется пересечение массивов). 
// // К примеру, getIntersection([1, 2, 3], [2, 3, 4]) должно вернуть [2, 3].

// // Решение: переберем один из переданных массивов (не имеет значения какой) с помощью цикла. В цикле воспользуемся функцией inArray, которую мы с вами разработали выше. 
// // С ее помощью будем проверять, есть ли текущий элемент одного массива во втором. 
// // Если есть - записываем его в массив с результатом. Вот решение:

// function getIntersection(arr1, arr2) {
// 	var result = [];
// 	for (var i = 0; i < arr1.length; i++) {
// 		if(inArray(arr1[i], arr2)) {
// 			result.push(arr1[i]);
// 		}
// 	}
// 	return result;
// }

// console.log(getIntersection([1, 2, 3], [2, 3, 4]));




// // НОД
// // Задача: реализуйте функцию getGreatestCommonDivisor, которая параметрами будет принимать два числа и возвращать наибольший общий делитель (НОД) этих двух чисел. 
// // К примеру, для чисел 12 и 18 НОД равен 6.

// // Решение: используем разработанные нами функции. 
// // С помощью getDivisors найдем массив делителей одного и второго числа, а с помощью getIntersection - получим массив общих делителей. 
// // Останется просто взять максимальный из общих делителей - и получим результат:

// function getGreatestCommonDivisor(num1, num2){
//     let divisors = getIntersection(getDivisors(num1), getDivisors(num2));

//     return Number(Max.apply(null, divisors));
// };

// console.log(getGreatestCommonDivisor(12, 18));










































// 1. Дана строка. Сделайте заглавным первый символ каждого слова этой строки. 
// Для этого сделайте вспомогательную функцию ucfirst, 
// которая будет получать строку, делать первый символ этой строки заглавным и возвращать обратно строку с заглавной первой буквой.

var str = 'здесь будет текст, буквы которого надо сделать заглавной';

function ucfirst(str){
    str = 'здесь будет текст, буквы которого надо сделать заглавной';
    let arr = str.split(' ');
    let newStr = '';

    for(let i = 0; i < arr.length; i++){
        newStr = newStr + arr[i][0].toUpperCase() + arr[i].substr(1) + ' ';
    }
    return newStr;
}
console.log(ucfirst(str));




// 2. Дана строка вида 'var_text_hello'. Сделайте из него текст 'varTextHello'.

let str2 = 'var_text_hello';
let arr = str2.split('_');
let newStr2 = arr[0];

for(let i = 1; i < arr.length; i++){
    newStr2 = newStr2 + arr[i][0].toUpperCase() + arr[i].substr(1) + '';
}
console.log(newStr2);